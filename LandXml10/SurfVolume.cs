//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime: <..>
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#if !BUILD_LAND_XML
using System;
using System.IO;
using System.Text;
using System.Collections.Generic;
using XmlSchemaProcessor.Common;

namespace XmlSchemaProcessor.LandXml10
{

    /// <summary>
    /// volume calculation results between two surfaces
    /// Sequence [1, 1]
    ///     Feature [0, *]
    /// </summary>

    public class SurfVolume : XsdBaseReader
    {
        public SurfVolume(System.Xml.XmlReader reader) : base(reader)
        {
        }

        /// <summary>
        /// A reference name value referring to Surface.name attribute.
        /// </summary>

        public string SurfBase;
        /// <summary>
        /// A reference name value referring to Surface.name attribute.
        /// </summary>

        public string SurfCompare;

        public double VolCut;

        public double VolFill;

        public double VolTotal;

        public string Desc;

        public string Name;

        #region XsdBaseReader

        protected override bool NewReader(string namespaceURI, string name)
        {
            if (name.EqualsIgnoreCase("Feature"))
            {
                this.SetCurrent("Feature", this.NewReader<Feature>());
                return true;
            }

            return base.NewReader(namespaceURI, name);
        }

        #endregion

        #region XsdBaseObject

        public override bool Read(IDictionary<string, string> attributes, string text)
        {
            base.Read(attributes, text);

            this.SurfBase = XsdConverter.Instance.Convert<string>(
                    attributes.GetSafe("surfBase"));

            this.SurfCompare = XsdConverter.Instance.Convert<string>(
                    attributes.GetSafe("surfCompare"));

            this.VolCut = XsdConverter.Instance.Convert<double>(
                    attributes.GetSafe("volCut"));

            this.VolFill = XsdConverter.Instance.Convert<double>(
                    attributes.GetSafe("volFill"));

            this.VolTotal = XsdConverter.Instance.Convert<double>(
                    attributes.GetSafe("volTotal"));

            this.Desc = XsdConverter.Instance.Convert<string>(
                    attributes.GetSafe("desc"));

            this.Name = XsdConverter.Instance.Convert<string>(
                    attributes.GetSafe("name"));

            return true;
        }

        public override string ToAttributes()
        {
            AttributesBuilder buff = new AttributesBuilder(base.ToAttributes());

            if ((object)this.SurfBase != null)
            {
                buff.Append("surfBase", this.SurfBase);
            }
            if ((object)this.SurfCompare != null)
            {
                buff.Append("surfCompare", this.SurfCompare);
            }
            if ((object)this.VolCut != null)
            {
                buff.Append("volCut", this.VolCut);
            }
            if ((object)this.VolFill != null)
            {
                buff.Append("volFill", this.VolFill);
            }
            if ((object)this.VolTotal != null)
            {
                buff.Append("volTotal", this.VolTotal);
            }
            if ((object)this.Desc != null)
            {
                buff.Append("desc", this.Desc);
            }
            if ((object)this.Name != null)
            {
                buff.Append("name", this.Name);
            }

            return buff.ToString();
        }

        #endregion

        #region object

        public override string ToString()
        {
            StringBuilder buff = new StringBuilder(base.ToString());

            if ((object)this.SurfBase != null)
            {
                buff.AppendFormat("surfBase = {0}", this.SurfBase).AppendLine();
            }
            if ((object)this.SurfCompare != null)
            {
                buff.AppendFormat("surfCompare = {0}", this.SurfCompare).AppendLine();
            }
            if ((object)this.VolCut != null)
            {
                buff.AppendFormat("volCut = {0}", this.VolCut).AppendLine();
            }
            if ((object)this.VolFill != null)
            {
                buff.AppendFormat("volFill = {0}", this.VolFill).AppendLine();
            }
            if ((object)this.VolTotal != null)
            {
                buff.AppendFormat("volTotal = {0}", this.VolTotal).AppendLine();
            }
            if ((object)this.Desc != null)
            {
                buff.AppendFormat("desc = {0}", this.Desc).AppendLine();
            }
            if ((object)this.Name != null)
            {
                buff.AppendFormat("name = {0}", this.Name).AppendLine();
            }

            return buff.ToString();
        }

        #endregion
    }
}
#endif
